def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34
    ndkVersion "25.1.8937393"
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        // Flag to enable support for the new language APIs
        // TODO: Used in the furture if lcoal noti get eorror
        // coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "pantech.panshop_app"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        production {
            storeFile file('evm_keystore.jks')
            keyAlias 'EVM'
            keyPassword 'evm2023'
            storePassword 'evm2023'
        }
        staging {
            storeFile file('evm_staging_keystore.jks')
            keyAlias 'EVM Staging'
            keyPassword 'evmstg'
            storePassword 'evmstg'
        }
        dev {
            storeFile file('evm_dev_keystore.jks')
            keyAlias 'EVM Dev'
            keyPassword 'evmdev'
            storePassword 'evmdev'
        }
    }

    flavorDimensions "evmapp"

    productFlavors {
       dev {
            dimension "evmapp"// TODO: change
            applicationIdSuffix ".panshop_dev"
            resValue "string", "app_name", "PanshopDev"
            signingConfig signingConfigs.dev
        }
        staging {
            dimension "evmapp"// TODO: change
            applicationIdSuffix ".panshop_staging"
            resValue "string", "app_name", "PanshopStaging"
            signingConfig signingConfigs.staging
        }
        production {
            dimension "evmapp"// TODO: change
            applicationIdSuffix ".panshop_app"
            resValue "string", "app_name", "Panshop"
            signingConfig signingConfigs.production
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
   
}
